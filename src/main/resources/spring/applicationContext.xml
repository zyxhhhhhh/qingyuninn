<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!-- 加载属性文件 -->
    <context:property-placeholder location="classpath:*.properties"></context:property-placeholder>
    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="url" value="${jdbc.url}"></property>
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="maxActive" value="10"></property>
        <property name="minIdle" value="3"></property>
    </bean>

    <!-- 创建SessionFactory工厂:注入数据源 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 1,注入数据源-->
        <property name="dataSource" ref="dataSource"></property>
        <!-- 2,注册实体的mapper文件 -->
        <property name="mapperLocations" value="classpath:com/group/mapper/*Mapper.xml"></property>
        <!-- 3,加载全局配置文件 -->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
    </bean>

    <!-- 扫描DAO接口 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 必须指定到DAO接口的完整包,也就是这个包下面的类必须是DAO接口。 -->
        <property name="basePackage" value="com.group.dao"></property>
    </bean>



    <!-- 服务层类的扫描 -->
    <context:component-scan base-package="com.group.service"></context:component-scan>

    <!-- 事务的管理通知类-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 注入数据源-->
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!-- 事务通知 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager"><!-- 管理 -->
        <!-- 事务的传播属性 -->
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="del*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="select*" read-only="true"/>
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>
    <!-- 事务切面AOP编程 -->
    <aop:config>
        <!-- 扫描服务层 -->
        <aop:pointcut id="myPoint" expression="execution(* com.group.service.*.*(..))"></aop:pointcut>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="myPoint"></aop:advisor>
    </aop:config>

    <!-- 表现层配置 -->
    <!-- 扫描action -->
    <context:component-scan base-package="com.group.controller"></context:component-scan>
    <!-- 注解的处理器映射器和处理器适配器 -->
    <mvc:annotation-driven></mvc:annotation-driven>
    <!-- 视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 前缀 -->
        <property name="prefix" value="/WEB-INF/jsp/"></property>
        <!-- 后缀 -->
        <property name="suffix" value=".jsp"></property>
    </bean>
    <!-- 静态资源的处理 避免被拦截-->
    <mvc:resources mapping="/js/**" location="/js/"></mvc:resources>
    <mvc:resources mapping="/css/**" location="/css/"></mvc:resources>
    <mvc:resources mapping="/img/**" location="/img/"></mvc:resources>
    <mvc:resources mapping="/bank_img/**" location="/bank_img/"></mvc:resources>
    <mvc:resources mapping="/images/**" location="/images/"></mvc:resources>
    <!-- 拦截器 -->

    <!-- 文件类型解析器 -->
    <!--配置返回值转换器-->
    <bean id="contentNegotiationManagerFactoryBean"
          class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <!--是否支持后缀匹配-->
        <property name="favorPathExtension" value="false"/>
        <!--是否支持参数匹配-->
        <property name="favorParameter" value="true"/>
        <!--是否accept-header匹配-->
        <property name="ignoreAcceptHeader" value="false"/>
        <property name="mediaTypes">
            <map>
                <!--表示.json结尾的请求返回json-->
                <entry key="json" value="application/json"/>
                <!--表示.xml结尾的返回xml-->
                <entry key="xml" value="application/xml"/>
            </map>
        </property>
    </bean>


</beans>